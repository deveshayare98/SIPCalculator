{"ast":null,"code":"function calculateSIP(principal, monthlyInvestment, interestRate, timeInYears) {\n  const monthlyInterestRate = interestRate / 12 / 100;\n  const totalMonths = timeInYears * 12;\n  let futureValue = 0;\n  for (let i = 0; i < totalMonths; i++) {\n    futureValue += monthlyInvestment;\n    futureValue *= 1 + monthlyInterestRate;\n  }\n  // Round the future value to two decimal places\n  futureValue = Math.round(futureValue * 100) / 100;\n  return futureValue.toFixed(2);\n}\nexport default calculateSIP;","map":{"version":3,"names":["calculateSIP","principal","monthlyInvestment","interestRate","timeInYears","monthlyInterestRate","totalMonths","futureValue","i","Math","round","toFixed"],"sources":["D:/Devesh/React Project/sip_project/src/utils/SIPReturnCalculation.js"],"sourcesContent":["function calculateSIP(principal, monthlyInvestment, interestRate, timeInYears) {\n    const monthlyInterestRate = interestRate / 12 / 100;\n    const totalMonths = timeInYears * 12;\n  \n    let futureValue = 0;\n    for (let i = 0; i < totalMonths; i++) {\n      futureValue += monthlyInvestment;\n      futureValue *= 1 + monthlyInterestRate;\n    }\n    // Round the future value to two decimal places\n    futureValue = Math.round(futureValue * 100) / 100;\n  \n    return futureValue.toFixed(2);\n  }\n  \n\n  \n\nexport default calculateSIP;"],"mappings":"AAAA,SAASA,YAAYA,CAACC,SAAS,EAAEC,iBAAiB,EAAEC,YAAY,EAAEC,WAAW,EAAE;EAC3E,MAAMC,mBAAmB,GAAGF,YAAY,GAAG,EAAE,GAAG,GAAG;EACnD,MAAMG,WAAW,GAAGF,WAAW,GAAG,EAAE;EAEpC,IAAIG,WAAW,GAAG,CAAC;EACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,WAAW,EAAEE,CAAC,EAAE,EAAE;IACpCD,WAAW,IAAIL,iBAAiB;IAChCK,WAAW,IAAI,CAAC,GAAGF,mBAAmB;EACxC;EACA;EACAE,WAAW,GAAGE,IAAI,CAACC,KAAK,CAACH,WAAW,GAAG,GAAG,CAAC,GAAG,GAAG;EAEjD,OAAOA,WAAW,CAACI,OAAO,CAAC,CAAC,CAAC;AAC/B;AAKF,eAAeX,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}