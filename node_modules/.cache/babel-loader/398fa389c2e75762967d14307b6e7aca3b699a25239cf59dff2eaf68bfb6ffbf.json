{"ast":null,"code":"var _jsxFileName = \"D:\\\\Devesh\\\\React Project\\\\sip_project\\\\src\\\\Component\\\\VerticalBar.js\",\n  _s = $RefreshSig$();\nimport { Bar } from \"react-chartjs-2\";\nimport Chart from \"chart.js/auto\";\nimport { CategoryScale } from \"chart.js\";\nimport \"../Styles/VerticalBar.css\";\nimport { useEffect, useState } from \"react\";\nimport ConvertNumberToWord from \"../utils/ConvertNumberToWord\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale);\nconst options = {\n  responsive: false,\n  scales: {\n    xAxes: [{\n      gridLines: {\n        display: false,\n        drawBorder: false,\n        borderDash: [3, 3],\n        zeroLineColor: \"blue\",\n        color: \"rgba(0, 0, 0, 0)\"\n      },\n      categoryPercentage: 0.7,\n      barPercentage: 0.9,\n      ticks: {\n        beginAtZero: false\n      }\n    }],\n    yAxes: [{\n      display: true,\n      gridLines: {\n        display: false,\n        zeroLineColor: \"transparent\",\n        color: \"rgba(0, 0, 0, 0)\"\n      },\n      ticks: {\n        beginAtZero: false,\n        suggestedMin: 10000,\n        // Set your desired minimum value\n        suggestedMax: 2400000\n      }\n    }],\n    x: {\n      grid: {\n        display: false\n      },\n      border: {\n        display: false\n      }\n    },\n    y: {\n      grid: {\n        display: false\n      },\n      border: {\n        display: false\n      },\n      ticks: {\n        display: true,\n        suggestedMin: 20000,\n        // Set your desired minimum value\n        suggestedMax: 2400000,\n        beginAtZero: false\n      }\n    }\n  }\n};\nfunction VerticalBar(props) {\n  _s();\n  const [Bardata, setBardata] = useState({\n    labels: [[\"5 years\", \"12 L\"], [\"10 years\", \"20 L\"], [\"15 years\", \"30 L\"], [\"20 years\", \"40 L\"]],\n    datasets: [{\n      label: \"Returns Of Investment \",\n      data: [500, 100000, 200000, 2400000]\n    }]\n  });\n  useEffect(() => {\n    if (props.selectedSIP.length > 0) {\n      let Xaxislable = Bardata.labels.map((fact, index) => {\n        let newarr = [];\n        newarr.push(fact[0]);\n        newarr.push(ConvertNumberToWord(props.selectedSIP[index]));\n        return newarr;\n      });\n      setBardata({\n        ...Bardata,\n        labels: Xaxislable,\n        datasets: [{\n          ...Bardata.datasets[0],\n          data: props.selectedSIP\n        }]\n      });\n    }\n  }, [props.selectedSIP]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bar-main-container\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      width: \"500\",\n      height: \"500\",\n      data: Bardata,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(VerticalBar, \"+51S2ZDobkddujq0By3KC8X2GTc=\");\n_c = VerticalBar;\nexport default VerticalBar;\nvar _c;\n$RefreshReg$(_c, \"VerticalBar\");","map":{"version":3,"names":["Bar","Chart","CategoryScale","useEffect","useState","ConvertNumberToWord","jsxDEV","_jsxDEV","register","options","responsive","scales","xAxes","gridLines","display","drawBorder","borderDash","zeroLineColor","color","categoryPercentage","barPercentage","ticks","beginAtZero","yAxes","suggestedMin","suggestedMax","x","grid","border","y","VerticalBar","props","_s","Bardata","setBardata","labels","datasets","label","data","selectedSIP","length","Xaxislable","map","fact","index","newarr","push","className","children","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Devesh/React Project/sip_project/src/Component/VerticalBar.js"],"sourcesContent":["import { Bar } from \"react-chartjs-2\";\nimport Chart from \"chart.js/auto\";\nimport { CategoryScale } from \"chart.js\";\nimport \"../Styles/VerticalBar.css\";\nimport { useEffect, useState } from \"react\";\nimport ConvertNumberToWord from \"../utils/ConvertNumberToWord\";\nChart.register(CategoryScale);\n\nconst options = {\n  responsive: false,\n  scales: {\n    xAxes: [\n      {\n        gridLines: {\n          display: false,\n          drawBorder: false,\n          borderDash: [3, 3],\n          zeroLineColor: \"blue\",\n          color: \"rgba(0, 0, 0, 0)\",\n        },\n        categoryPercentage: 0.7,\n        barPercentage: 0.9,\n        ticks: {\n          beginAtZero: false,\n        },\n      },\n    ],\n    yAxes: [\n      {\n        display: true,\n        gridLines: {\n          display: false,\n          zeroLineColor: \"transparent\",\n          color: \"rgba(0, 0, 0, 0)\",\n        },\n        ticks: {\n          beginAtZero: false,\n          suggestedMin: 10000, // Set your desired minimum value\n          suggestedMax: 2400000,\n        },\n      },\n    ],\n    x: {\n      grid: {\n        display: false,\n      },\n      border: {\n        display: false,\n      },\n    },\n    y: {\n      grid: {\n        display: false,\n      },\n      border: {\n        display: false,\n      },\n      ticks: {\n        display: true,\n        suggestedMin: 20000, // Set your desired minimum value\n        suggestedMax: 2400000,\n        beginAtZero: false,\n      },\n    },\n  },\n};\n\nfunction VerticalBar(props) {\n  const [Bardata, setBardata] = useState({\n    labels: [\n      [\"5 years\", \"12 L\"],\n      [\"10 years\", \"20 L\"],\n      [\"15 years\", \"30 L\"],\n      [\"20 years\", \"40 L\"],\n    ],\n    datasets: [\n      {\n        label: \"Returns Of Investment \",\n        data: [500, 100000, 200000, 2400000],\n      },\n    ],\n  });\n\n  useEffect(() => {\n    if (props.selectedSIP.length > 0) {\n      let Xaxislable = Bardata.labels.map((fact, index) => {\n        let newarr = [];\n        newarr.push(fact[0]);\n        newarr.push(ConvertNumberToWord(props.selectedSIP[index]));\n        return newarr;\n      });\n      setBardata({\n        ...Bardata,\n        labels: Xaxislable,\n        datasets: [\n          {\n            ...Bardata.datasets[0],\n            data: props.selectedSIP,\n          },\n        ],\n      });\n    }\n  }, [props.selectedSIP]);\n\n  return (\n    <div className=\"bar-main-container\">\n      <Bar width=\"500\" height=\"500\" data={Bardata} options={options} />\n    </div>\n  );\n}\n\nexport default VerticalBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}